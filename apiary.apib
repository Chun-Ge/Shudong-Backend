FORMAT: 1A
HOST: http://localhost:9090

# chunge-shudong

Shudong Mock Server API

Use Cookie, so no token in request params/form.

Response Code and msg:
Code | msg      |
---- | -------  |
200  | OK            |
401  | Unauthorized  |
403  | Forbidden     |
409  | Conflict      |
500  | InternalServerError |

## Login [/login]

### Login [POST]

+ Request (application/json)

        {
            "username":"example@mail2.sysu.edu.cn",
            "password":"pass",
        }

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": {
                "userId": "a1b2c3d4e5"
            }
        }

+ Response 403 (application/json)

        {
            "msg": "Forbidden",
            "data": null
        }

## Logout [/logout]

### Logout [POST]

+ Request (application/json)

        {
            "userId": "a1b2c3d4e5",
        }

+ Response 200 (application/json)

        {
            "msg":"OK",
            "data": null
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

## Register [/users]

### Register New User [POST]

+ Request (application/json)

        {
            "username":"example@mail2.sysu.edu.cn",
            "password": "pass"
        }

+ Response 200 (application/json)

        {
            "msg":"OK",
            "data": {
                "userId": "a1b2c3d4e5"
            }
        }

+ Response 409 (application/json)

        {
            "msg": "Conflict",
            "data": null
        }

## User [/users/{username}]

### Retrieve User Info [GET]

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": {
                "userId":"a1b2c3d4e5"
            }
        }

+ Response 403 (application/json)

        {
            "msg": "Forbidden",
            "data": null
        }

### Modify User Info(PUT) [PUT]

+ Request (application/json)

        {
            "username":"example@mail2.sysu.edu.cn",
            "email": "example@example.com",
            "tel": "13322228888"
        }

+ Response 200 (application/json)

        {
            "msg":"OK",
            "data":
                    {
                        "userId":"a1b2c3d4e5",
                        "email": "example@example.com",
                        "tel": "13322228888"
                    }
        }

+ Response 403 (application/json)

        {
            "msg": "Forbidden",
            "data": null
        }

### Modify User Info(PATCH) [PATCH]

+ Request (application/json)

        {
            "userId":"a1b2c3d4e5",
            "email": "example2@example.com",
        }

+ Response 200 (application/json)

        {
            "msg":"OK",
            "data":
                    {
                        "userId":"a1b2c3d4e5",
                        "email": "example@mail2.sysu.edu.cn",
                        "tel": "13322228888"
                    }
        }

+ Response 403 (application/json)

        {
            "msg": "Forbidden",
            "data": null
        }

### Delete a user [DELETE]

+ Request (application/json)

        {
            "username":"example@mail2.sysu.edu.cn",
            "password": "pass"
        }

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": null
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

+ Response 403 (application/json)

        {
            "msg": "Forbidden",
            "data": null
        }


## Post Collection [/posts?limit={limitNum}&offset={offset}]

### Get recent posts [GET]

+ Response 200 (application/json)

        {
            "msg":"OK",
            "data":[
                {
                    "postId":1,
                    "author": "元首",
                    "title" : "post-title-1",
                    "summary":"post-summary-1",
                    "likeCount":666,
                    "commentCount":777
                },
                {
                    "postId":2,
                    "author": "春哥",
                    "title" : "post-title-2",
                    "summary":"post-summary-2",
                    "likeCount":0,
                    "commentCount":3
                },
                {
                    "postId":3,
                    "author": "带带大师兄",
                    "title" : "post-title-3",
                    "summary":"post-summary-3",
                    "likeCount":23,
                    "commentCount":0
                }
            ]
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }




### Create a new post [POST]

+ Request (application/json)

        {
            "username": "user",
            "post" : {
                    "category"
                    "title": "new-post-title",
                    "content": "new post title content",
                }
        }

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": {
                "post": {
                    "postId":1,
                    "authorId": "12ee12",
                    "title": "new-post-title",
                    "summary": "new post summary",
                    "content": "new post title content",
                    "likeCount":0,
                    "commentCount":0
                }
            }
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

+ Response 500 (application/json)
        {
        "msg": "InternalServerError",
        "data": null
        }

## Post [/posts/{postId}]

### Get a specific post [GET]

+ Response 200 (application/json)

        {
            "msg":"OK",
            "data": {
                    "post": {
                        "postId":1,
                        "author": "元首",
                        "title": "post-title-1",
                        "summary": "post-summary-1",
                        "content": "post-content-1",
                        "likeCount":666,
                        "commentCount":777
                    }
            }
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

### Delete a post [DELETE]

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": null
        }

## Like/Un-like a post [/posts/{postId}/like]

### Like/Un-like a post [GET]

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": {
                    "currentUserLike": true,
                    "currentLikeCount": 10
                }
        }

## Report a post [/posts/{postId}/report]

### Report a post [POST]

+ Request (application/json)

        {
            "reason": "report reason text string"
        }

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": null
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

## Star/Unstar a post [/posts/{postId}/star]

### Star/Unstar a post [GET]

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": {
                "currentUserStarred": true,
            }
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

## Share a post [/posts/{postId}/share]

### Share a post [GET]

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": {
                "currentUserShared": true,
                "currentPostSharedCount": 20,
                "shareSummary": "summary of the shared post"
            }
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }


## Comment Collection [/posts/{postId}/comments]

### Get comments pertaining to specific post [GET]

+ Response 200 (application/json)

        {
            "msg":"OK",
            "data": {
                "comments": [
                    {
                        "commentId":5,
                        "author": "德国BOY",
                        "relatedPostId":1,
                        "content":"comment(1) on postId=1"
                        "like_count":5
                    },
                    {
                        "commentId":8,
                        "author": "非凡哥",
                        "relatedPostId":1,
                        "content":"comment(2) on postId=1"
                        "like_count":0
                    }
                ]
            }
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

### Comment on a post [POST]

+ Request (application/json)

        {
            "comment": {
                "content": "new comment on postId=1"
            }
        }

+ Response 200 (application/json)

        {
            "msg":"OK",
            "data": {
                "comment": {
                    "commentId":9,
                    "author": "new comment author",
                    "relatedPostId":1,
                    "content":"new comment on postId=1"
                    "like_count":0,
                }
            }
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

## Comment [/posts/{postId}/comments/{commentId}]

### Delete a comment [DELETE]

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": null
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

## Like/Un-like a comment [/posts/{postId}/comments/{commentId}/like]

### Like/Un-like a comment [GET]

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": {
                    "currentUserLike": true,
                    "currentLikeCount": 7
                }
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }

## Report a comment [/posts/{postId}/comments/{commentId}/report]

### Report a comment [POST]

+ Request (application/json)

        {
            "reason": "report reason text string"
        }

+ Response 200 (application/json)

        {
            "msg": "OK",
            "data": null
        }

+ Response 401 (application/json)

        {
            "msg": "Unauthorized",
            "data": null
        }
